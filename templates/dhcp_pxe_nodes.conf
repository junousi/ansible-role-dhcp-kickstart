# {{ ansible_managed }}
{% for item in groups[dhcp_pxe_group]|sort %}
host {{ item }} {
  hardware ethernet {{ hostvars[item]['mac_address']Â }};
  fixed-address {{  hostvars[item]['ip_address'] }};
  send host-name "{{ item | regex_replace('^([^\.]*).*$', '\\1') }}.{{  hostvars[item]['dhcp_domain'] | default( dhcp_common_domain ) }}";
  next-server {{ hostvars[item]['dhcp_server_ip'] }};

  if exists user-class and (option user-class = "iPXE"
      or option user-class = "gPXE") {
     filename "http://{{ hostvars[item]['dhcp_server_ip'] }}/cgi-bin/boot.py";
   } elsif option arch = 00:00 {
     # Legacy x86 BIOS
     filename "undionly.kpxe";
   } else {
     # UEFI 64-bit
     filename "snponly.efi";

}
{% endfor %}
